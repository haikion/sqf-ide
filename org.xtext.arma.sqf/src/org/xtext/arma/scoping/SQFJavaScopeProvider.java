/**
 * generated by Xtext
 */
package org.xtext.arma.scoping;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.xtext.arma.sQF.LineOfCode;
import org.xtext.arma.sQF.LocalVariableReference;
import org.xtext.arma.sQF.Model;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class SQFJavaScopeProvider extends AbstractDeclarativeScopeProvider {
    //FIXME: Inner blocks
    public IScope scope_LocalVariableReference_name(final LocalVariableReference ref, 
            final EReference eReference) {
        EObject container = ref.eContainer().eContainer().eContainer().eContainer();
        //System.out.println("JavaScopeProvider: container=" + container);
        Model model = (Model) container;
        EList<LineOfCode> lines = model.getLines();
        return Scopes.scopeFor(lines);
  }
}
