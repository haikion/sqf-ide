grammar org.arma.xtext.Config hidden(WS, ML_COMMENT, SL_COMMENT) 

generate config "http://www.xtext.org/arma/Config"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model: {Model}
	lines+=(LineOfCode|Include|Define)*
;

LineOfCode: name=(CfgFunctions|ParameterDefinition|Class|ArrayDefinition) ';';

Class returns Variable :
	'class' name=ID '{'
		model=Model
	'}'
;

CfgFunctions:
	'class' 'CfgFunctions' '{'
		model=Model
	'}'
;

IntV:
	INT
;

FloatV:
	FLOAT
;

HexV:
	HEX
;

GameVar:
	'false'|'Coop'
;

NonArray:
	value=(IntV|FloatV|HexV|GameVar)|(String|Reference)
;

//pos[]={7250.9863,32.882957,7876.2173};
Array:
	{Array} '{'(member += NonArray (',' member += NonArray)*)?'}'
;

ParameterDefinition returns Variable:
	 name=ID '=' val=(NonArray)
;

ArrayDefinition:
	name=ARRAY_NAME '=' value=Array
;

String: 
	name=STRING_TERMINAL
;

Include:
	'#include' importURI=String
;

Calculation:
	vals+=NonArray (CALC_OPERATOR vals+=NonArray)+
;

ActualValue:
	val=(NonArray|Array|Calculation)
;

NestedValue:
    '(' NestedValue|ActualValue ')'
;

Define returns Variable:
	'#define' name=ID val=(NestedValue|ActualValue)
;

Reference:
	definiton=[Variable]
;
/*
DefineReference:
	definition=[Define|UNRECOGNIZED_STRING]
;

ClassReference:
	definition2=[Class|UNRECOGNIZED_STRING]
;
*/
//terminal CFG_FUNCTIONS: "CfgFunctions";

terminal HEX: '0x' ('0'..'F')+;
terminal FLOAT: INT '.' UNSIGNED ('e' ('+'|'-') UNSIGNED)?;
terminal CALC_OPERATOR: '+'|'-'|'*';
terminal INT: '-'? UNSIGNED;
terminal UNSIGNED: ('0'..'9')+;
terminal ML_COMMENT	: '/*' -> '*/';
terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;
terminal WS			: (' '|'\t'|'\r'|'\n')+;
terminal DOUBLE_QUETO: '""';
//terminal SINGLE_QUETO: '"';
terminal STRING_TERMINAL	: 
			'"' ( '\\' . | DOUBLE_QUETO | !('\\'|'"'))* '"' 
			| "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
		;
//Confusing name. Generally means a sequence of chars that can be: command, 
//global variable or public variable. More specific checking is done at validation. 
terminal ID: ('a'..'z'|'A'..'Z'|'0'..'9'|'_')+;
terminal ARRAY_NAME: ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9'|'_')+'[]';
